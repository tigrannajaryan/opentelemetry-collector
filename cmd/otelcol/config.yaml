extensions:
  health_check:
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

receivers:
  otlp:
    protocols:
      grpc:
      http:

  opencensus:

  # Collect own metrics
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 5s
        static_configs:
        - targets: ['0.0.0.0:8888']

  hostmetrics:
    collection_interval: 1s
    scrapers:
      cpu:
      load:
      memory:
      disk:
      filesystem:
      network:
      processes:
      swap:

  jaeger:
    protocols:
      grpc:
      thrift_binary:
      thrift_compact:
      thrift_http:

  zipkin:

processors:
  batch/traces:
    timeout: 10s

  batch/self:
    timeout: 10s

  batch/metrics:
    timeout: 10s

  attributes/addenv:
    actions:
      - key: "environment"
        value: tigrantest
        action: upsert

  attributes/envself:
    actions:
      - key: "environment"
        value: tigrantest
        action: upsert

  resource/ns:
    attributes:
      - key: "service.namespace"
        value: otelcol-agent
        action: upsert

exporters:
  logging/metrics:
  logging/traces:
#    logLevel: debug
  otlphttp:
    traces_endpoint: "http://internal-alb-lab0-internal-ingest-1517876229.us-east-1.elb.amazonaws.com/v2/trace/otlp"
    headers:
      X-SF-Token: qecVh09hjOsJuZ9GqqcGQw

  otlphttp/bad:
    metrics_endpoint: "https://httpstat.us/500"
    traces_endpoint: "https://httpstat.us/400"
    retry_on_failure:
      max_elapsed_time: 10s

service:

  pipelines:

    metrics:
      receivers: [otlp, opencensus, prometheus]
      processors: [batch/metrics]
      exporters: [logging/metrics, otlphttp/bad]

    traces:
      receivers: [otlp, jaeger, zipkin]
      processors: [batch/traces, attributes/addenv]
      exporters: [otlphttp/bad]

    traces/selfreport:
      receivers: [opencensus]
      processors: [attributes/envself]
      exporters: [otlphttp]

  extensions: [health_check, pprof, zpages]
